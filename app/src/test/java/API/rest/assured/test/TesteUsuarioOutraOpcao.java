/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package API.rest.assured.test;


import API.rest.assured.dominio.Usuario;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import org.apache.http.HttpStatus;
import org.hamcrest.MatcherAssert;
import org.hamcrest.Matchers;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import java.util.HashMap;
import java.util.Map;

import static org.hamcrest.Matchers.*;

public class TesteUsuarioOutraOpcao  {

    private static final String BASE_URL= "https://reqres.in";
    private static final String BASE_PATH = "/api";

    private static final String LISTA_USUARIOS_ENDPOINT ="/users";
    private static final String CRIAR_USUARIO_ENDDPOINT = "/user";
    private static final String MOSTRAR_USUARIO_ENDDPOINT = "/users/{userID}";

    @BeforeAll
    public static void  setups(){
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
    }

    @Test
    public void testMostraPaginaEspecifica() {
        String uri = getUri(LISTA_USUARIOS_ENDPOINT);

        RestAssured.given().param("page","2").contentType(ContentType.JSON).
        when()
                .get(uri).
                then().
                statusCode(HttpStatus.SC_OK).
                body("page", is(2)).
                body("data", is(notNullValue()));
    }



    @Test
    public void testeCriaUsuarioComSucesso() {
        String uri = getUri(CRIAR_USUARIO_ENDDPOINT);
       // Usuario usuario = new Usuario("Mateus","Analista de Sistema","mateusmorrais@gmail.com","lima");
        Map<String, String> usuario = new HashMap<>();
        usuario.put("name", "Mateus");
        usuario.put("job", " Eng Testes");

        RestAssured.given().
                contentType(ContentType.JSON).
                body(usuario).
                when().
                post(uri).
                then()
                .statusCode(201)
                .body("name", is("Mateus"));
    }

    @Test
    public void testeTamanhoDosItemsMostradosIgualAoPerPage() {
        String uri = getUri(LISTA_USUARIOS_ENDPOINT);
        int paginaEsperada = 2;
        int perPageEsperado = retornaPerPageEsperado(paginaEsperada);

        RestAssured.given().param("page", paginaEsperada).contentType(ContentType.JSON).
                when()
                .get(uri).
                then().
                statusCode(200).
                body(
                        "page", is(paginaEsperada),
                        "data.size()", Matchers.is(perPageEsperado),
                        "data.findAll {it.avatar.startsWith('https://reqres.in')}.size()", is(perPageEsperado)

                );

    }

    @Test
    public void testeMotraUsuarioEspecifico(){
        String uri = getUri(MOSTRAR_USUARIO_ENDDPOINT);
      Usuario usuario =  RestAssured.given()
                .pathParam("userID",2).contentType(ContentType.JSON)
                .when()
                .get(uri)
                .then()
                .statusCode(HttpStatus.SC_OK)
              .extract().body().jsonPath().getObject("data",Usuario.class);
            //    .body("data.email", containsString("@reqres.in"));

        MatcherAssert.assertThat(usuario.getEmail(), containsString("@reqres.in"));
        MatcherAssert.assertThat(usuario.getName(), is("Janet"));
        MatcherAssert.assertThat(usuario.getLastname(), is("Weaver"));
    }



    private int retornaPerPageEsperado(int page) {
        String uri = getUri(LISTA_USUARIOS_ENDPOINT);
        int perPageEsperado = RestAssured.given().param("page",page). contentType(ContentType.JSON).
                when().get(uri).
                then()
                .statusCode(HttpStatus.SC_OK).extract().path("per_page");
        return perPageEsperado;
    }
    private String getUri(String endpoint) {
        String uri = BASE_URL+BASE_PATH+endpoint;
        return uri;
    }



}
